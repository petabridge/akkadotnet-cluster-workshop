apiVersion: v1
kind: Service
metadata:
  name: grafana-ip-service
  annotations:
      prometheus.io/scrape: 'false'
      prometheus.io/path:   /metrics
      prometheus.io/port:   '3000'
spec:
  type: LoadBalancer
  selector:
    component: grafana
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      component: grafana
  template:
    metadata:
      labels:
        component: grafana
    spec:
      containers:
      - image: grafana/grafana:7.3.7
        name: grafana-core
        imagePullPolicy: IfNotPresent
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
          # does not really work, because of template variables in exported dashboards:
          # - name: GF_DASHBOARDS_JSON_ENABLED
          #   value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
        - name: datasources-provider
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboards-volume
          mountPath: /var/lib/grafana/dashboards
        - name: dashboard-provider
          mountPath: /etc/grafana/provisioning/dashboards
      volumes:
      - name: grafana-persistent-storage
        emptyDir: {}
      - name: datasources-provider
        configMap:
          name: grafana-datasources-provider
          items:
            - key: providers.yaml
              path: providers.yaml
      - name: dashboards-volume
        configMap:
          name: grafana-dashs
      - name: dashboard-provider
        configMap:
          name: grafana-dash-provider
          items:
            - key: providers.yaml
              path: providers.yaml
